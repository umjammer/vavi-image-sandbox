<?xml version="1.0" encoding="UTF-8"?>

<!-- ////////////////////////////////////////////////////////////////////// -->
<!-- Copyright (c) 2004 by Naohide Sano, All rights reserved.               -->
<!--                                                                        -->
<!-- Written by Naohide Sano                                                -->
<!--                                                                        -->
<!-- vavi-image-sandbox                                                     -->
<!--                                                                        -->
<!-- @author Naohide Sano                                                   -->
<!-- @version 0.00 020522 nsano initial version                             -->
<!--                                                                        -->
<!-- ////////////////////////////////////////////////////////////////////// -->

<project name="vavi-image-sandbox" default="run" basedir="."
  xmlns:artifact="urn:maven-artifact-ant">

  <path id="maven-ant-tasks.classpath">
    <fileset dir="${user.home}/lib/java">
      <include name="maven-ant-tasks*.jar" />
    </fileset>
  </path>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
           classpathref="maven-ant-tasks.classpath" /> 

  <property environment="env"/>
  <property file="local.properties" />
  <xmlproperty file="pom.xml" />

  <!-- Path Definitions -->
  <path id="project.class.path">
    <pathelement location="${javac.dest.test}" />
    <pathelement location="${javac.dest}" />
    <fileset refid="maven-ant-tasks.dependency.fileset" />
    <pathelement location="${opencv3.dir}/opencv-340.jar" />
  </path>

  <!-- prepare -->
  <target name="prepare" description="Preparing">
    <artifact:pom file="pom.xml" id="maven.project" />
    <artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset">
      <pom refid="maven.project" />
    </artifact:dependencies>
    <artifact:mvn pom="pom.xml">
      <arg value="-q" />
      <arg value="clean" />
      <arg value="package" />
      <arg value="-DskipTests=true" />
    </artifact:mvn>
  </target>

  <!-- clean -->
  <target name="clean" description="ビルド環境のクリア">
    <delete>
      <fileset dir="${dir.src}/vavix/imageio/jpeg">
        <include name="*.o" />
        <include name="vavix_*.h" />
      </fileset>
      <fileset dir="lib">
        <include name="libimageioJPEG_simd.*" />
      </fileset>
    </delete>
  </target>

  <!-- javah -->
  <target name="javah" depends="prepare" description="Makeing Header">
    <javah destdir="${dir.src}/vavix/imageio/jpeg">
      <classpath refid="project.class.path" />
      <class name="vavix.imageio.jpeg.JPEGImageReader" />
      <class name="vavix.imageio.jpeg.JPEGImageWriter" />
    </javah>
  </target>

  <!-- gcc mac -->
  <target name="compile.native" depends="javah" description="コンパイル C">
    <apply executable="gcc" dest="${dir.src}/vavix/imageio/jpeg" parallel="false">
      <arg value="-c" />
      <arg line="-g -Wall -O2" />
      <arg line="-arch i386 -arch x86_64" />
      <arg value="-I." />
      <arg value="-I${libjpeg.include}" />
      <arg value="-I${jdk.home}/include" />
      <arg value="-I${jdk.home}/include/darwin" />
      <arg value="-o"/>
      <targetfile/>
      <srcfile/>
      <fileset dir="${dir.src}/vavix/imageio/jpeg" includes="*.c"/>
      <mapper type="glob" from="*.c" to="*.o"/>
    </apply>
  </target>

  <!-- link mac -->
  <target name="link" depends="compile.native" description="Makeing DLL">
    <apply executable="gcc" dest="lib">
      <arg line="-dynamiclib" />
      <arg line="-read_only_relocs suppress" />
      <arg line="-arch i386" />
      <arg value="${libjpeg.home}/.libs/libjpeg.a" />
      <arg value="${dir.src}/vavix/imageio/jpeg/jni_util.o" />
      <arg value="-o" />
      <targetfile />
      <srcfile />
      <fileset dir="${dir.src}/vavix/imageio/jpeg" includes="*.o" excludes="${dir.src}/vavix/imageio/jpeg/jni_util.o"/>
      <mapper type="glob" from="imageio*.o" to="libimageio*.dylib"/>
    </apply>
  </target>

  <!-- run -->
  <target name="run" depends="prepare" description="qrcode">
    <java classname="vavi.util.qr.Qrcode" fork="yes">
      <jvmarg value="-Dfile.encoding=${project.build.plugins.plugin.configuration.encoding}"/>
      <classpath refid="project.class.path" />
      <arg value="${run.value}" />
    </java>
  </target>

  <!-- qrcode -->
  <target name="qr1" depends="prepare" description="by ImageProducer">
    <java classname="vavi.util.qr.QrcodeImageSource" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="${run.value}" />
      <arg value="${run.size}" />
    </java>
  </target>

  <!-- qrcode -->
  <target name="qr2" depends="prepare" description="by JComponent">
    <java classname="vavi.util.qr.JQrcodeComponent" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="${run.value}" />
      <arg value="${run.size}" />
    </java>
  </target>

  <!-- barcode image -->
  <target name="bar" depends="prepare" description="Barcode Image">
    <java classname="vavi.util.barcode.Barcode" fork="yes">
      <classpath refid="project.class.path" />
      <arg value="0123456" />
      <arg value="intl2of5" />
      <arg value="300" />
      <arg value="false" />
    </java>
  </target>

  <!-- color matcher -->
  <target name="matcher" depends="prepare" description="Tests ColorMatcher class.">
    <java classname="vavix.awt.image.util.ColorMatcherTest" fork="yes">
      <classpath>
        <path refid="project.class.path" />
      </classpath>
      <arg value="#00ff00" />
    </java>
  </target>

  <!-- image magick -->
  <target name="magick" depends="prepare" description="image magick filter -Dmagick.in=file">
    <java classname="t146_11" fork="yes">
      <classpath>
        <path refid="project.class.path" />
      </classpath>
      <arg value="${magick.in}" />
    </java>
  </target>

  <!-- jpeg simd -->
  <target name="t8" depends="prepare" description="jpeg simd">
    <java classname="Test8" fork="yes">
      <!--
      <jvmarg value="-32" />
      -->
      <jvmarg value="-Djava.library.path=lib"/>
      <classpath>
        <path refid="project.class.path" />
      </classpath>
      <arg value="${t8.in}" />
    </java>
  </target>

  <!-- dump jpeg -->
  <target name="dumpjpeg" depends="prepare" description="jpeg analyze">
    <java classname="DumpJpeg" fork="yes">
      <jvmarg value="-ea" />
      <env key="path" value="lib" />
      <classpath>
        <path refid="project.class.path" />
      </classpath>
      <arg value="${jpeg}" />
    </java>
  </target>

</project>

<!-- -->
