<?xml version="1.0" encoding="UTF-8"?>

<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>vavi</groupId>
  <artifactId>vavi-image-sandbox</artifactId>
  <version>1.0.5-SNAPSHOT</version>

  <name>Vavi Imaging Sandbox API</name>
  <organization>
    <name></name>
  </organization>
  <url>httpa://github.com/umjammer/vavi-image-sandbox</url>
  <description>
TODO

    jpeg cimd?
    smilla enlarge</description>
  <scm>
    <url>httpa://github.com/umjammer/vavi-image-sandbox</url>
  </scm>
  <issueManagement>
    <url>httpa://github.com/umjammer/vavi-image-sandbox/issues</url>
  </issueManagement>

  <properties>
    <rococoa.version>0.8.3</rococoa.version>
  </properties>

  <profiles>
    <profile>
      <id>local (not on jitpack)</id>
      <activation>
        <os>
          <family>mac</family>
          <arch>x86_64</arch>
        </os>
        <property>
          <name>env.JITPACK</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <extensions>true</extensions>
            <configuration>
              <javahSearchJNIFromDependencies>false</javahSearchJNIFromDependencies>
              <javahOS>darwin</javahOS>
              <compilerProvider>generic-classic</compilerProvider>
              <compilerStartOptions>
                <compilerStartOption>-g -Wall -O2 -fomit-frame-pointer -fPIC -Wno-sign-compare -std=c++11</compilerStartOption>
                <!-- unless locating jdk includes, cause error why??? -->
                <compilerStartOption>-arch x86_64
                      -I${java.home}/../include
                      -I${java.home}/../include/darwin
                      -I/usr/local/include
                      -Isrc/main/butteraugli
                </compilerStartOption>
              </compilerStartOptions>
              <sources>
                <source>
                  <directory>src/main/butteraugli/butteraugli</directory>
                  <fileNames>
                    <fileName>butteraugli.cc</fileName>
                  </fileNames>
                </source>
              </sources>
              <linkerStartOptions>
                <linkerStartOption>-dynamiclib -arch x86_64
                  -L/usr/local/lib -lc++ -lpng -ljpeg</linkerStartOption>
              </linkerStartOptions>
              <linkerFinalName></linkerFinalName>
              <linkerEndOptions>
                <linkerEndOption>-o ${project.build.directory}/vavi-image-butteraugli-${project.version}.dylib</linkerEndOption>
              </linkerEndOptions>
            </configuration>
            <executions>
              <execution>
                <id>native</id>
                <phase>compile</phase>
                <goals>
                  <goal>compile</goal>
                  <goal>link</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>3.0.0-M5</version>
            <configuration>
              <trimStackTrace>false</trimStackTrace>
              <forkMode>once</forkMode>
              <argLine>
                -Dvavi.test=true
                -Djava.library.path=${project.build.directory}
                -Djna.library.path=${project.build.directory}
                -Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
              </argLine>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.10</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.rococoa</groupId>
                      <artifactId>rococoa-core</artifactId>
                      <type>dylib</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                      <destFileName>librococoa.dylib</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
<!--
    <profile>
      <id>not on eclipse</id>
      <activation>
        <property>
          <name>org.osgi.framework.vendor</name>
          <value>!Eclipse</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>com.sun</groupId>
          <artifactId>rt</artifactId>
          <version>1.8.0</version>
          <scope>system</scope>
          <systemPath>${java.home}/lib/rt.jar</systemPath>
         </dependency>
      </dependencies>
    </profile>
-->
    <profile>
      <id>magick</id>
      <activation>
        <property>
          <name>magick</name>
          <value></value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- exec:exec -->
            <!-- $ mvn -P magick exec:java -Dexec.args='"file"' -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>t146_11</mainClass>
              <classpathScope>test</classpathScope>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>wmr</id>
      <activation>
        <property>
          <name>wmr</name>
          <value></value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- exec:exec -->
            <!-- $ mvn -P wmr exec:java -Dexec.args='"dir1" "dir2"' -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mainClass>Test32</mainClass>
              <classpathScope>test</classpathScope>
              <arguments>
                <argument>-Xmx3G</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
<!--
          <compilerArgs>
            <arg>-XDignore.symbol.file</arg>
          </compilerArgs>
-->
        </configuration>
      </plugin>
<!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>local.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.8.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
    <repository>
      <id>github</id>
      <name>GitHub umjammer Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/umjammer/*</url>
    </repository>
    <repository>
      <id>umjammer-mvn-repo</id>
      <url>https://raw.github.com/umjammer/umjammer/mvn-repo/</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
    <repository>
      <id>jboss thirdparty</id>
      <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons</artifactId>
      <version>1.1.5</version>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-image</artifactId>
      <version>1.0.8</version>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons-sandbox</artifactId>
      <version>0.3.4</version>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-awt</artifactId>
      <version>1.0.5</version>
    </dependency>
    <dependency>
      <groupId>org.openpnp</groupId>
      <artifactId>opencv</artifactId>
      <version>[4.3.0,)</version>
    </dependency>
    <dependency>
      <groupId>org.rococoa</groupId>
      <artifactId>rococoa-core</artifactId>
      <version>${rococoa.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.barcode4j</groupId>
      <artifactId>barcode4j</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>avalon-framework</groupId>
      <artifactId>avalon-framework-api</artifactId>
      <version>4.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.mortennobel</groupId>
      <artifactId>java-image-scaling</artifactId>
      <version>0.8.5</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>jai-imageio-jpeg2000</artifactId>
      <version>1.3.1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>javapng-spi</artifactId>
      <version>2.1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.im4java</groupId>
      <artifactId>im4java</artifactId>
      <version>1.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- proposal -->
      <groupId>org.mp4parser</groupId>
      <artifactId>isoparser</artifactId>
      <version>1.9.31</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>javavp8decoder</artifactId>
      <version>0.2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.drewnoakes</groupId>
      <artifactId>metadata-extractor</artifactId>
      <version>2.11.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jogl</groupId>
      <artifactId>jogl-macosx-universal</artifactId>
      <version>1.1.1-rc6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.media</groupId>
      <artifactId>jai-codec</artifactId>
      <version>1.1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
